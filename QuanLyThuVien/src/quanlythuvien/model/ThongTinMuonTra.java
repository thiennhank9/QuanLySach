package quanlythuvien.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.sql.Date;
import java.util.Comparator;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Thongtinmuontra generated by hbm2java
 */
@Entity
@Table(name = "thongtinmuontra", catalog = "quanlythuvien")
public class ThongTinMuonTra implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer idThongTinMuonTra;
	private ThanhVien thanhVien;
	private Sach sach;
	private Date ngayMuon;
	private Date ngayHetHan;
	private String trangThai;
	private Date ngayTra;
	private String phat;

	public ThongTinMuonTra() {
	}

	public ThongTinMuonTra(ThanhVien thanhVien, Sach sach, Date ngayMuon, Date ngayHetHan, String trangThai) {
		this.thanhVien = thanhVien;
		this.sach = sach;
		this.ngayMuon = ngayMuon;
		this.ngayHetHan = ngayHetHan;
		this.trangThai = trangThai;
	}

	public ThongTinMuonTra(ThanhVien thanhVien, Sach sach, Date ngayMuon, Date ngayHetHan, String trangThai,
			Date ngayTra, String phat) {
		this.thanhVien = thanhVien;
		this.sach = sach;
		this.ngayMuon = ngayMuon;
		this.ngayHetHan = ngayHetHan;
		this.trangThai = trangThai;
		this.ngayTra = ngayTra;
		this.phat = phat;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idthongtinmuontra", unique = true, nullable = false)
	public Integer getIdThongTinMuonTra() {
		return this.idThongTinMuonTra;
	}

	public void setIdThongTinMuonTra(Integer idThongTinMuonTra) {
		this.idThongTinMuonTra = idThongTinMuonTra;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idthanhvien")
	public ThanhVien getThanhVien() {
		return this.thanhVien;
	}

	public void setThanhVien(ThanhVien thanhVien) {
		this.thanhVien = thanhVien;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idsach")
	public Sach getSach() {
		return this.sach;
	}

	public void setSach(Sach sach) {
		this.sach = sach;
	}

	@Column(name = "ngaymuon", nullable = false, length = 45)
	public Date getNgayMuon() {
		return this.ngayMuon;
	}

	public void setNgayMuon(Date ngayMuon) {
		this.ngayMuon = ngayMuon;
	}

	@Column(name = "ngayhethan", nullable = false, length = 45)
	public Date getNgayHetHan() {
		return this.ngayHetHan;
	}

	public void setNgayHetHan(Date ngayHetHan) {
		this.ngayHetHan = ngayHetHan;
	}

	@Column(name = "trangthai", nullable = false, length = 45)
	public String getTrangThai() {
		return this.trangThai;
	}

	public void setTrangThai(String trangThai) {
		this.trangThai = trangThai;
	}

	@Column(name = "ngaytra", length = 45)
	public Date getNgayTra() {
		return this.ngayTra;
	}

	public void setNgayTra(Date ngayTra) {
		this.ngayTra = ngayTra;
	}

	@Column(name = "phat", length = 200)
	public String getPhat() {
		return phat;
	}

	public void setPhat(String phat) {
		this.phat = phat;
	}

	public static Comparator<ThongTinMuonTra> compareAscendingTenThanhVien = new Comparator<ThongTinMuonTra>() {
		public int compare(ThongTinMuonTra db1, ThongTinMuonTra db2) {
			String dbName1 = db1.getThanhVien().getTenThanhVien();
			String dbName2 = db2.getThanhVien().getTenThanhVien();
			return dbName1.compareTo(dbName2);
		}
	};

	public static Comparator<ThongTinMuonTra> compareDecendingTenThanhVien = new Comparator<ThongTinMuonTra>() {
		public int compare(ThongTinMuonTra db1, ThongTinMuonTra db2) {
			String dbName1 = db1.getThanhVien().getTenThanhVien();
			String dbName2 = db2.getThanhVien().getTenThanhVien();
			return dbName2.compareTo(dbName1);
		}
	};

	public static Comparator<ThongTinMuonTra> compareAscendingTenSach = new Comparator<ThongTinMuonTra>() {
		public int compare(ThongTinMuonTra db1, ThongTinMuonTra db2) {
			String dbName1 = db1.getSach().getTenSach();
			String dbName2 = db2.getSach().getTenSach();
			return dbName1.compareTo(dbName2);
		}
	};

	public static Comparator<ThongTinMuonTra> compareDecendingTenSach = new Comparator<ThongTinMuonTra>() {
		public int compare(ThongTinMuonTra db1, ThongTinMuonTra db2) {
			String dbName1 = db1.getSach().getTenSach();
			String dbName2 = db2.getSach().getTenSach();
			return dbName2.compareTo(dbName1);
		}
	};

	public static Comparator<ThongTinMuonTra> compareAscendingNgayMuon = new Comparator<ThongTinMuonTra>() {
		public int compare(ThongTinMuonTra db1, ThongTinMuonTra db2) {
			Date dbName1 = db1.getNgayMuon();
			Date dbName2 = db2.getNgayMuon();
			if (dbName1.before(dbName2)) {
				return -1;
			} else if (dbName1.after(dbName2)) {
				return 1;
			} else {
				return 0;
			}
		}
	};

	public static Comparator<ThongTinMuonTra> compareDecendingNgayMuon = new Comparator<ThongTinMuonTra>() {
		public int compare(ThongTinMuonTra db1, ThongTinMuonTra db2) {
			Date dbName1 = db1.getNgayMuon();
			Date dbName2 = db2.getNgayMuon();
			if (dbName2.before(dbName1)) {
				return -1;
			} else if (dbName2.after(dbName1)) {
				return 1;
			} else {
				return 0;
			}
		}
	};
	
	public static Comparator<ThongTinMuonTra> compareAscendingNgayHetHan = new Comparator<ThongTinMuonTra>() {
		public int compare(ThongTinMuonTra db1, ThongTinMuonTra db2) {
			Date dbName1 = db1.getNgayHetHan();
			Date dbName2 = db2.getNgayHetHan();
			if (dbName1.before(dbName2)) {
				return -1;
			} else if (dbName1.after(dbName2)) {
				return 1;
			} else {
				return 0;
			}
		}
	};

	public static Comparator<ThongTinMuonTra> compareDecendingNgayHetHan = new Comparator<ThongTinMuonTra>() {
		public int compare(ThongTinMuonTra db1, ThongTinMuonTra db2) {
			Date dbName1 = db1.getNgayHetHan();
			Date dbName2 = db2.getNgayHetHan();
			if (dbName2.before(dbName1)) {
				return -1;
			} else if (dbName2.after(dbName1)) {
				return 1;
			} else {
				return 0;
			}
		}
	};
	
	public static Comparator<ThongTinMuonTra> compareAscendingTrangThai = new Comparator<ThongTinMuonTra>() {
		public int compare(ThongTinMuonTra db1, ThongTinMuonTra db2) {
			String dbName1 = db1.getTrangThai();
			String dbName2 = db2.getTrangThai();
			return dbName1.compareTo(dbName2);
		}
	};

	public static Comparator<ThongTinMuonTra> compareDecendingTrangThai = new Comparator<ThongTinMuonTra>() {
		public int compare(ThongTinMuonTra db1, ThongTinMuonTra db2) {
			String dbName1 = db1.getTrangThai();
			String dbName2 = db2.getTrangThai();
			return dbName2.compareTo(dbName1);
		}
	};
}
